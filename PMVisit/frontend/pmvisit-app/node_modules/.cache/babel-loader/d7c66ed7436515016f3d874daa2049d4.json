{"ast":null,"code":"import { OPT_URL, OPT_KEY } from '../../Constants.js';\n\nconst axios = require(\"axios\");\n\nclass OptimisationService {\n  constructor() {\n    this.findRoutes = async todos => {\n      let path = '';\n\n      for (let i = 0; i < todos.length; i++) {\n        let todo = todos[i];\n        path += todo['lon'];\n        path += ',';\n        path += todo['lat'];\n        if (i < todos.length - 1) path += ';';else path += '?';\n      }\n\n      console.log(path);\n      path = OPT_URL + path + 'access_token=' + 'pk.eyJ1IjoidmFpYjA0MDkiLCJhIjoiY2wzYWtrcWFxMDZoMTNjbnJ4a29ncmhwMiJ9.kmpmZ26kYVH8q34bNq4Xiw';\n      console.log(path); //\"https://api.mapbox.com/optimized-trips/v1/mapbox/driving/-122.42,37.78;-122.45,37.91;-122.48,37.73?access_token=pk.eyJ1IjoidmFpYjA0MDkiLCJhIjoiY2wzYWtrcWFxMDZoMTNjbnJ4a29ncmhwMiJ9.kmpmZ26kYVH8q34bNq4Xiw\"\n\n      axios.get(path);\n      RETURN.then(response => {\n        console.log(response);\n        let paths = [];\n\n        for (let i = 0; i < todos.length - 1; i++) {\n          paths[i] = {};\n        }\n\n        for (let i = 0; i < todos.length - 1; i++) {\n          if (!response.data['waypoints'][i]['waypoint_index']) {\n            console.log(response.data['waypoints'][i]['waypoint_index']);\n            paths[response.data['waypoints'][i]['waypoint_index']]['From'] = todos[i]['place'];\n          } else if (response.data['waypoints'][i]['waypoint_index'] == todos.length - 1) {\n            console.log(response.data['waypoints'][i]['waypoint_index']);\n            paths[response.data['waypoints'][i]['waypoint_index'] - 1]['To'] = todos[i]['place'];\n          } else {\n            console.log(response.data['waypoints'][i]['waypoint_index']);\n            paths[response.data['waypoints'][i]['waypoint_index']]['From'] = todos[i]['place'];\n            paths[response.data['waypoints'][i]['waypoint_index'] - 1]['To'] = todos[i]['place'];\n          }\n\n          paths[i]['Time'] = response.data['trips'][0]['legs'][i]['duration'] / 60;\n        }\n\n        return paths;\n      });\n    };\n  }\n\n}\n\nexport default new OptimisationService();","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/api/map/OptimisationService.js"],"names":["OPT_URL","OPT_KEY","axios","require","OptimisationService","findRoutes","todos","path","i","length","todo","console","log","get","RETURN","then","response","paths","data"],"mappings":"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","sourcesContent":["import {OPT_URL, OPT_KEY} from '../../Constants.js'\nconst axios = require(\"axios\");\n\nclass OptimisationService{\n\n      findRoutes = async (todos) => {\n                let path=''\n                for(let i=0;i<todos.length;i++){\n                        let todo=todos[i];\n                        path+=todo['lon'];\n                        path+=','\n                        path+=todo['lat']\n                        if(i<todos.length-1)\n                                path+=';'\n                        else\n                                path+='?'\n\n                }\n                console.log(path)\n                path = OPT_URL+path+'access_token='+'pk.eyJ1IjoidmFpYjA0MDkiLCJhIjoiY2wzYWtrcWFxMDZoMTNjbnJ4a29ncmhwMiJ9.kmpmZ26kYVH8q34bNq4Xiw'\n                console.log(path)\n                //\"https://api.mapbox.com/optimized-trips/v1/mapbox/driving/-122.42,37.78;-122.45,37.91;-122.48,37.73?access_token=pk.eyJ1IjoidmFpYjA0MDkiLCJhIjoiY2wzYWtrcWFxMDZoMTNjbnJ4a29ncmhwMiJ9.kmpmZ26kYVH8q34bNq4Xiw\"\n\n                axios.get(path)\n                RETURN\n                .then( response =>{\n                console.log(response)\n                let paths=[]\n\n                for(let i=0;i<todos.length-1;i++){\n                        paths[i]={}\n                }\n                for(let i=0;i<todos.length-1;i++){\n                        if(!response.data['waypoints'][i]['waypoint_index']){\n                                console.log(response.data['waypoints'][i]['waypoint_index'])\n                                paths[response.data['waypoints'][i]['waypoint_index']]['From']=todos[i]['place'];\n                        }\n                        else if(response.data['waypoints'][i]['waypoint_index']==todos.length-1){\n                                console.log(response.data['waypoints'][i]['waypoint_index'])\n                                paths[response.data['waypoints'][i]['waypoint_index']-1]['To']=todos[i]['place'];\n                        }\n                        else{\n                                console.log(response.data['waypoints'][i]['waypoint_index'])\n                                paths[response.data['waypoints'][i]['waypoint_index']]['From']=todos[i]['place'];\n                                paths[response.data['waypoints'][i]['waypoint_index']-1]['To']=todos[i]['place'];\n                        }\n                        paths[i]['Time']=response.data['trips'][0]['legs'][i]['duration']/60;\n                }\n                return paths\n        }\n        )\n\n        }\n}\n\nexport default new OptimisationService()"]},"metadata":{},"sourceType":"module"}