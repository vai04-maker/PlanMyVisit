{"ast":null,"code":"import axios from \"axios\";\nimport LoginComponent from \"../../components/todo/LoginComponent\";\nimport { API_URL, JPA_API_URL } from '../../Constants';\nimport GeocodingService from '../map/GeocodingService.js';\n\nclass TodoDataService {\n  retrieveAllTodos(name) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n  }\n\n  retrieveTodo(name, id) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  deleteTodo(name, id) {\n    return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  updateTodo(name, id, todo) {\n    console.log(\"sending request to geocoding service\");\n    GeocodingService.geocoding(todo.place).then(response => {\n      console.log(response);\n      axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo, response['lat']);\n    });\n  }\n\n  createTodo(name, todo, geocodes) {\n    console.log(\"sending request to geocoding service\");\n    GeocodingService.geocoding(todo.place).then(response => {\n      axios.post(`${JPA_API_URL}/users/${name}/todos`, todo, response.data.results[0]['location']['lat']);\n    }).catch(error => {\n      console.log(\"Getting error\");\n      console.error(error);\n    });\n  }\n\n}\n\nexport default new TodoDataService();","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/api/todo/TodoDataService.js"],"names":["axios","LoginComponent","API_URL","JPA_API_URL","GeocodingService","TodoDataService","retrieveAllTodos","name","get","retrieveTodo","id","deleteTodo","delete","updateTodo","todo","console","log","geocoding","place","then","response","put","createTodo","geocodes","post","data","results","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,iBAAnC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,MAAMC,eAAN,CAAqB;AACjBC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,WAAOP,KAAK,CAACQ,GAAN,CAAW,GAAEL,WAAY,UAASI,IAAK,QAAvC,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACF,IAAD,EAAOG,EAAP,EAAW;AACnB,WAAOV,KAAK,CAACQ,GAAN,CAAW,GAAEL,WAAY,UAASI,IAAK,UAASG,EAAG,EAAnD,CAAP;AACH;;AAEDC,EAAAA,UAAU,CAACJ,IAAD,EAAOG,EAAP,EAAU;AAChB,WAAOV,KAAK,CAACY,MAAN,CAAc,GAAET,WAAY,UAASI,IAAK,UAASG,EAAG,EAAtD,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACN,IAAD,EAAOG,EAAP,EAAWI,IAAX,EAAgB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAZ,IAAAA,gBAAgB,CACfa,SADD,CACWH,IAAI,CAACI,KADhB,EAECC,IAFD,CAEOC,QAAD,IAAa;AACfL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACApB,MAAAA,KAAK,CAACqB,GAAN,CAAW,GAAElB,WAAY,UAASI,IAAK,UAASG,EAAG,EAAnD,EAAsDI,IAAtD,EAA4DM,QAAQ,CAAC,KAAD,CAApE;AACH,KALD;AAOH;;AAEDE,EAAAA,UAAU,CAACf,IAAD,EAAOO,IAAP,EAAaS,QAAb,EAAsB;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAZ,IAAAA,gBAAgB,CAACa,SAAjB,CAA2BH,IAAI,CAACI,KAAhC,EACCC,IADD,CACMC,QAAQ,IAAI;AACdpB,MAAAA,KAAK,CAACwB,IAAN,CAAY,GAAErB,WAAY,UAASI,IAAK,QAAxC,EAAiDO,IAAjD,EAAuDM,QAAQ,CAACK,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyB,UAAzB,EAAqC,KAArC,CAAvD;AACH,KAHD,EAGGC,KAHH,CAGWC,KAAD,IAAU;AAChBb,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACH,KAND;AAQH;;AAlCgB;;AAwCrB,eAAe,IAAIvB,eAAJ,EAAf","sourcesContent":["import axios from \"axios\"\nimport LoginComponent from \"../../components/todo/LoginComponent\"\nimport {API_URL, JPA_API_URL} from '../../Constants'\nimport GeocodingService from '../map/GeocodingService.js'\n\n\nclass TodoDataService{\n    retrieveAllTodos(name) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos`)\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`)\n    }\n\n    deleteTodo(name, id){\n        return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`)\n    }\n\n    updateTodo(name, id, todo){\n        console.log(\"sending request to geocoding service\")\n        GeocodingService\n        .geocoding(todo.place)\n        .then((response) =>{\n            console.log(response)\n            axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo, response['lat'])\n        })\n       \n    }\n\n    createTodo(name, todo, geocodes){\n        console.log(\"sending request to geocoding service\")\n        GeocodingService.geocoding(todo.place)\n        .then(response => {\n            axios.post(`${JPA_API_URL}/users/${name}/todos`, todo, response.data.results[0]['location']['lat'])\n        }).catch( (error) =>{\n            console.log(\"Getting error\")\n            console.error(error)\n        })\n        \n    }\n\n\n\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}