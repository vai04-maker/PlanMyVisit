{"ast":null,"code":"class AuthenticationService {\n  executeJwtAuthenticationService(username, password) {\n    return axios.post('http://localhost:8191/autheticate', {\n      username,\n      password\n    });\n  }\n\n  registerSuccessfulLogin(username, password) {\n    console.log('registerSuccessfulLogin');\n    sessionStorage.setItem('authenticatedUser', username);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/AuthenticationService.js"],"names":["AuthenticationService","executeJwtAuthenticationService","username","password","axios","post","registerSuccessfulLogin","console","log","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AAAA,MAAMA,qBAAN,CAA2B;AAEvBC,EAAAA,+BAA+B,CAACC,QAAD,EAAWC,QAAX,EAAoB;AAC/C,WAAOC,KAAK,CAACC,IAAN,CAAW,mCAAX,EAA+C;AAClDH,MAAAA,QADkD;AAElDC,MAAAA;AAFkD,KAA/C,CAAP;AAIH;;AAEDG,EAAAA,uBAAuB,CAACJ,QAAD,EAAUC,QAAV,EAAmB;AACtCI,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CR,QAA3C;AACH;;AAEDS,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAACL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAT;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,KAAP;AAChB,WAAO,IAAP;AACH;;AAEDE,EAAAA,mBAAmB,GAAE;AACjB,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,EAAP;AAChB,WAAOA,IAAP;AACH;;AA5BsB;;AA+B3B,eAAe,IAAId,qBAAJ,EAAf","sourcesContent":["class AuthenticationService{\n\n    executeJwtAuthenticationService(username, password){\n        return axios.post('http://localhost:8191/autheticate',{\n            username, \n            password\n        })\n    }\n\n    registerSuccessfulLogin(username,password){\n        console.log('registerSuccessfulLogin')\n        sessionStorage.setItem('authenticatedUser',username);\n    }\n\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn(){\n        let user=sessionStorage.getItem('authenticatedUser')\n        if(user===null) return false;\n        return true;\n    }\n\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null) return ''\n        return user\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}