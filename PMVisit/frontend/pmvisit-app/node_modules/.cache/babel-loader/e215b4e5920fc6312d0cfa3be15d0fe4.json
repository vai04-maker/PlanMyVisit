{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = values => {\n      let errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter the place';\n      }\n\n      if (!values.description) {\n        errors.description = 'Enter a description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter atleast 5 Characters in Description';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Enter a valid target date.';\n      }\n\n      return errors;\n    };\n\n    this.onSubmit = values => {\n      let username = AuthenticationService.getLoggedInUserName();\n\n      if (this.state.id === -1) {\n        TodoDataService.createTodo(username, {\n          id: this.state.id,\n          description: values.description,\n          targetDate: values.targetDate\n        }).then(() => this.props.navigate('/todos'));\n      } else {\n        TodoDataService.updateTodo(username, this.state.id, {\n          id: this.state.id,\n          description: values.description,\n          targetDate: values.targetDate\n        }).then(() => this.props.navigate('/todos'));\n      }\n    };\n\n    this.state = {\n      id: this.props.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD'),\n      place: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.id === -1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: response.data.targetDate,\n      place: response.data.place\n    }));\n  }\n\n  render() {\n    let description = this.state.description;\n    let targetDate = moment(this.state.targetDate).format('YYYY-MM-DD');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description: description,\n            targetDate: targetDate\n          },\n          onSubmit: this.onSubmit,\n          validate: this.validate,\n          validateOnChange: false,\n          validateonBlur: false,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"targetDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","TodoDataService","AuthenticationService","TodoComponent","constructor","props","validate","values","errors","description","length","targetDate","isValid","onSubmit","username","getLoggedInUserName","state","id","createTodo","then","navigate","updateTodo","params","Date","format","place","componentDidMount","retrieveTodo","response","setState","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'   \nimport moment from 'moment'\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props) {\n        super(props)\n \n        this.state = {\n            id: this.props.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\n            place: ''\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.id===-1){\n            return\n        }\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.retrieveTodo(username, this.state.id)\n        .then(response => this.setState({\n            description: response.data.description,\n            targetDate: response.data.targetDate,\n            place: response.data.place\n        }))\n    }\n\n    validate= (values) =>{\n       let errors={}\n       if(!values.description){\n        errors.description='Enter the place'\n       }\n       if(!values.description){\n           errors.description='Enter a description'\n       }\n       else if(values.description.length<5){\n           errors.description='Enter atleast 5 Characters in Description'\n       }\n       if(!moment(values.targetDate).isValid()){\n           errors.targetDate ='Enter a valid target date.'\n       }\n       return errors; \n    }\n    onSubmit = (values) => {\n        let username = AuthenticationService.getLoggedInUserName();\n        \n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, {\n                id: this.state.id,\n                description: values.description,\n                targetDate: values.targetDate\n            }).then(() => this.props.navigate('/todos'))\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, {\n                id: this.state.id,\n                description: values.description,\n                targetDate: values.targetDate\n            }).then(() => this.props.navigate('/todos'))\n        }\n    }\n\n    render() {\n        let description = this.state.description\n        let targetDate = moment(this.state.targetDate).format('YYYY-MM-DD')\n        return(\n        <div> \n            <h1>Todo</h1>\n            <div className=\"container\">\n                <Formik initialValues={\n                    {\n                        description: description,\n                        targetDate: targetDate\n                    }\n                }\n                onSubmit={this.onSubmit}\n                validate={this.validate}\n                validateOnChange={false}\n                validateonBlur={false}\n                enableReinitialize={true}\n                >\n                    {\n                        (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"></Field>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"></Field>\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                        )\n                    }\n                </Formik>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default TodoComponent;"]},"metadata":{},"sourceType":"module"}