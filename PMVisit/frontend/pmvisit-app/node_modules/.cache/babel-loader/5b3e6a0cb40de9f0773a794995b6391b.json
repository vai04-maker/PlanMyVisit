{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport GeocodingService from '../../api/map/GeocodingService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = values => {\n      let errors = {};\n\n      if (!values.place) {\n        errors.description = 'Enter the place';\n      }\n\n      if (!values.description) {\n        errors.description = 'Enter a description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter atleast 5 Characters in Description';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Enter a valid target date.';\n      }\n\n      return errors;\n    };\n\n    this.onSubmit = async values => {\n      let username = AuthenticationService.getLoggedInUserName();\n      console.log(\"Got username\");\n\n      if (this.state.id == -1) {\n        console.log(\"Calling create todo\");\n        let geocodes = await GeocodingService.geocoding(values.place);\n        console.log(geocodes);\n        TodoDataService.createTodo(username, geocodes, {\n          id: this.state.id,\n          description: values.description,\n          targetDate: values.targetDate,\n          place: values.place,\n          lat: geocodes['lat'],\n          lon: geocodes['l']\n        }).then(() => this.props.navigate('/todos')).catch(error => {\n          console.log(\"Getting error\");\n          console.error(error);\n        });\n      } else {\n        console.log(\"Calling update todo\");\n        let geocodes = await GeocodingService.geocoding(values.place);\n        console.log(geocodes);\n        TodoDataService.updateTodo(username, this.state.id, {\n          id: this.state.id,\n          description: values.description,\n          targetDate: values.targetDate,\n          place: values.place,\n          lat: geocodes['lat'],\n          lon: geocodes['lon']\n        }).then(() => this.props.navigate('/todos')).catch(error => {\n          console.log(\"Getting error\");\n          console.error(error);\n        });\n      }\n    };\n\n    this.state = {\n      id: this.props.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD'),\n      place: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.id == -1) {\n      return;\n    } else {\n      let username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n        description: response.data.description,\n        targetDate: response.data.targetDate,\n        place: response.data.place\n      }));\n    }\n  }\n\n  render() {\n    let description = this.state.description;\n    let targetDate = moment(this.state.targetDate).format('YYYY-MM-DD');\n    let place = this.state.place;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description: description,\n            targetDate: targetDate,\n            place: place\n          },\n          onSubmit: this.onSubmit,\n          validate: this.validate,\n          validateOnChange: false,\n          validateonBlur: false,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"targetDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"place\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","TodoDataService","GeocodingService","AuthenticationService","TodoComponent","constructor","props","validate","values","errors","place","description","length","targetDate","isValid","onSubmit","username","getLoggedInUserName","console","log","state","id","geocodes","geocoding","createTodo","lat","lon","then","navigate","catch","error","updateTodo","params","Date","format","componentDidMount","retrieveTodo","response","setState","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'   \nimport moment from 'moment'\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport GeocodingService from '../../api/map/GeocodingService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props) {\n        super(props)\n \n        this.state = {\n            id: this.props.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\n            place: ''\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.id == -1){\n            return;\n        }\n        else{\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.retrieveTodo(username, this.state.id)\n        .then(response => this.setState({\n            description: response.data.description,\n            targetDate: response.data.targetDate,\n            place: response.data.place\n        }))\n        }\n    }\n\n    validate= (values) =>{\n       let errors={}\n       if(!values.place){\n            errors.description='Enter the place'\n       }\n       if(!values.description){\n           errors.description='Enter a description'\n       }\n       else if(values.description.length<5){\n           errors.description='Enter atleast 5 Characters in Description'\n       }\n       if(!moment(values.targetDate).isValid()){\n           errors.targetDate ='Enter a valid target date.'\n       }\n       return errors; \n    }\n    onSubmit = async (values) => {\n        let username = AuthenticationService.getLoggedInUserName();\n        console.log(\"Got username\")\n        if (this.state.id == -1) {\n            console.log(\"Calling create todo\")\n            let geocodes= await GeocodingService.geocoding(values.place)\n            console.log(geocodes)\n            TodoDataService.createTodo(username, geocodes,{\n                id: this.state.id,\n                description: values.description,\n                targetDate: values.targetDate,\n                place: values.place,\n                lat: geocodes['lat'],\n                lon: geocodes['l']\n            })\n            .then(() => this.props.navigate('/todos'))\n            .catch( (error) =>{\n                console.log(\"Getting error\")\n                console.error(error)\n            })\n        } else {\n            console.log(\"Calling update todo\")\n            let geocodes= await GeocodingService.geocoding(values.place)\n            console.log(geocodes)\n            TodoDataService.updateTodo(username, this.state.id, {\n                id: this.state.id,\n                description: values.description,\n                targetDate: values.targetDate,\n                place: values.place,\n                lat: geocodes['lat'],\n                lon: geocodes['lon']\n            })\n            .then(() => this.props.navigate('/todos'))\n            .catch( (error) =>{\n                console.log(\"Getting error\")\n                console.error(error)\n            })\n        }\n    }\n\n    render() {\n        let description = this.state.description\n        let targetDate = moment(this.state.targetDate).format('YYYY-MM-DD')\n        let place = this.state.place\n        return(\n        <div> \n            <h1>Todo</h1>\n            <div className=\"container\">\n                <Formik initialValues={\n                    {\n                        description: description,\n                        targetDate: targetDate,\n                        place: place\n                    }\n                }\n                onSubmit={this.onSubmit}\n                validate={this.validate}\n                validateOnChange={false}\n                validateonBlur={false}\n                enableReinitialize={true}\n                >\n                    {\n                        (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"place\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"></Field>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"></Field>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Place</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"place\"></Field>\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                        )\n                    }\n                </Formik>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default TodoComponent;"]},"metadata":{},"sourceType":"module"}