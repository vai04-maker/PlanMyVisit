{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.loginClicked = event => {\n      if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\n        console.log('Success');\n        this.setState({\n          showSuccessMessage: true\n        });\n        this.setState({\n          hasLoginFailed: false\n        });\n      } else {\n        console.log('Failed');\n        this.setState({\n          showSuccessMessage: false\n        });\n        this.setState({\n          hasLoginFailed: true\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n  }\n\n  // handlePasswordChange= (event) => {\n  //     console.log(event.target.value);\n  //     this.setState({password:event.target.value})\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loginClicked,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"showInavalidCredentials\", {\n        hasLoginFailed: this.state.hasLoginFailed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"showLoginSuccessful\", {\n        showSuccessMessage: this.state.showSuccessMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction showInavalidCredentials(props) {\n  if (props.hasLoginFailed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Invalid Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\nfunction showLoginSuccessful(props) {\n  if (props.showSuccessMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Login Successful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/TodoApp.jsx"],"names":["React","Component","TodoApp","render","LoginComponent","constructor","props","handleChange","event","console","log","target","value","setState","name","loginClicked","state","username","password","showSuccessMessage","hasLoginFailed","showInavalidCredentials","showLoginSuccessful"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\n\nclass TodoApp extends Component{\n    render(){\n        return (\n            <div className='TodoApp'>\n                <LoginComponent/>\n            </div>\n        )\n    }    \n}\n\nclass LoginComponent extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            username: 'in28minutes',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n    }\n\n\n    handleChange= (event) => {\n        console.log(event.target.value);\n        this.setState(\n            {\n                [event.target.name]:event.target.value\n            }\n            )\n    }\n\n    loginClicked = (event) =>{\n        if(this.state.username ==='in28minutes' && this.state.password==='dummy'){\n            console.log('Success')\n            this.setState({showSuccessMessage: true});\n            this.setState({hasLoginFailed: false});\n        }\n        else{\n            console.log('Failed')\n            this.setState({showSuccessMessage: false});\n            this.setState({hasLoginFailed: true});\n        }\n        console.log(this.state)\n    }\n\n    // handlePasswordChange= (event) => {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n    render(){\n        return(\n        <div>\n            Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n            Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            <button onClick={this.loginClicked}>Login</button>\n            <showInavalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>\n            <showLoginSuccessful showSuccessMessage={this.state.showSuccessMessage}/>\n        </div>\n        )\n    }\n\n\n}\n\nfunction showInavalidCredentials(props){\n    if(props.hasLoginFailed){\n        return(\n            <div>\n                Invalid Credentials\n            </div>\n        )\n    }\n    return null\n}\n\nfunction showLoginSuccessful(props){\n    if(props.showSuccessMessage){\n        return(\n            <div>\n                Login Successful\n            </div>\n        )\n    }\n    \n}\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}