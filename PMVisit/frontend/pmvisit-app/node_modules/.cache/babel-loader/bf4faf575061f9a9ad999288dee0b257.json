{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/PlanComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport OptimisationService from '../../api/map/OptimisationService.js';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlanComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshTodos = async () => {\n      let username = AuthenticationService.getLoggedInUserName();\n      console.log(username);\n      TodoDataService.retrieveAllTodos(username).then(response => {\n        this.setState({\n          todos: response.data\n        });\n        console.log(this.state);\n      }).then(response => {\n        this.findRoutes();\n      });\n    };\n\n    this.findRoutes = async () => {\n      await OptimisationService.findRoutes(this.state.todos).then(response => {\n        //this.setState({routes: response.data})\n        let todos = this.state.todos;\n        console.log(response);\n        let paths = [];\n\n        for (let i = 0; i < todos.length - 1; i++) {\n          paths[i] = {};\n        }\n\n        for (let i = 0; i < todos.length; i++) {\n          if (!response.data['waypoints'][i]['waypoint_index']) {\n            console.log(response.data['waypoints'][i]['waypoint_index']);\n            paths[response.data['waypoints'][i]['waypoint_index']]['From'] = todos[i]['place'];\n          } else if (response.data['waypoints'][i]['waypoint_index'] == todos.length - 1) {\n            console.log(response.data['waypoints'][i]['waypoint_index']);\n            paths[response.data['waypoints'][i]['waypoint_index'] - 1]['To'] = todos[i]['place'];\n          } else {\n            console.log(response.data['waypoints'][i]['waypoint_index']);\n            paths[response.data['waypoints'][i]['waypoint_index']]['From'] = todos[i]['place'];\n            paths[response.data['waypoints'][i]['waypoint_index'] - 1]['To'] = todos[i]['place'];\n          }\n\n          if (i < todos.length - 1) {\n            paths[i]['Time'] = response.data['trips'][0]['legs'][i]['duration'] / 60;\n          }\n        }\n\n        console.log(paths);\n        this.setState({\n          routes: paths\n        });\n      });\n    };\n\n    this.state = {\n      todos: [//{id: 1, description: 'Learn React', done: false , targetDate: new Date()},\n        //{id: 2, description: 'Learn Dance', done: false , targetDate: new Date()}\n      ],\n      routes: [],\n      message: null\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component did mount');\n    this.refreshTodos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"From\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is completed?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TargetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Place\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: moment(todo.targetDate).format('YYYY-MM-DD')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.place\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.updateTodoClicked(todo.id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.deleteTodoClicked(todo.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlanComponent;","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/PlanComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","OptimisationService","moment","PlanComponent","constructor","props","refreshTodos","username","getLoggedInUserName","console","log","retrieveAllTodos","then","response","setState","todos","data","state","findRoutes","paths","i","length","routes","message","componentDidMount","render","map","todo","description","done","toString","targetDate","format","place","updateTodoClicked","id","deleteTodoClicked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAqC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAqBlBC,YArBkB,GAqBJ,YAAY;AACtB,UAAIC,QAAQ,GAAGP,qBAAqB,CAACQ,mBAAtB,EAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAR,MAAAA,eAAe,CAACY,gBAAhB,CAAiCJ,QAAjC,EACCK,IADD,CAEIC,QAAQ,IAAI;AACR,aAAKC,QAAL,CAAc;AAACC,UAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAjB,SAAd;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAjB;AACH,OALL,EAMEL,IANF,CAOIC,QAAQ,IAAG;AACX,aAAKK,UAAL;AACC,OATL;AAcH,KAtCiB;;AAAA,SAwClBA,UAxCkB,GAwCN,YAAW;AACnB,YAAMjB,mBAAmB,CAACiB,UAApB,CAA+B,KAAKD,KAAL,CAAWF,KAA1C,EACLH,IADK,CAEFC,QAAQ,IAAG;AACP;AACI,YAAIE,KAAK,GAAE,KAAKE,KAAL,CAAWF,KAAtB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,YAAIM,KAAK,GAAC,EAAV;;AAEA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,KAAK,CAACM,MAAN,GAAa,CAA3B,EAA6BD,CAAC,EAA9B,EAAiC;AACzBD,UAAAA,KAAK,CAACC,CAAD,CAAL,GAAS,EAAT;AACP;;AACD,aAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,KAAK,CAACM,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AACvB,cAAG,CAACP,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,CAAJ,EAAoD;AAC5CX,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,CAAZ;AACAD,YAAAA,KAAK,CAACN,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,CAAD,CAAL,CAAuD,MAAvD,IAA+DL,KAAK,CAACK,CAAD,CAAL,CAAS,OAAT,CAA/D;AACP,WAHD,MAIK,IAAGP,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,KAAiDL,KAAK,CAACM,MAAN,GAAa,CAAjE,EAAmE;AAChEZ,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,CAAZ;AACAD,YAAAA,KAAK,CAACN,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,IAAgD,CAAjD,CAAL,CAAyD,IAAzD,IAA+DL,KAAK,CAACK,CAAD,CAAL,CAAS,OAAT,CAA/D;AACP,WAHI,MAID;AACIX,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,CAAZ;AACAD,YAAAA,KAAK,CAACN,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,CAAD,CAAL,CAAuD,MAAvD,IAA+DL,KAAK,CAACK,CAAD,CAAL,CAAS,OAAT,CAA/D;AACAD,YAAAA,KAAK,CAACN,QAAQ,CAACG,IAAT,CAAc,WAAd,EAA2BI,CAA3B,EAA8B,gBAA9B,IAAgD,CAAjD,CAAL,CAAyD,IAAzD,IAA+DL,KAAK,CAACK,CAAD,CAAL,CAAS,OAAT,CAA/D;AACP;;AACD,cAAGA,CAAC,GAACL,KAAK,CAACM,MAAN,GAAa,CAAlB,EAAoB;AACpBF,YAAAA,KAAK,CAACC,CAAD,CAAL,CAAS,MAAT,IAAiBP,QAAQ,CAACG,IAAT,CAAc,OAAd,EAAuB,CAAvB,EAA0B,MAA1B,EAAkCI,CAAlC,EAAqC,UAArC,IAAiD,EAAlE;AACC;AACR;;AACDX,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,aAAKL,QAAL,CAAc;AAACQ,UAAAA,MAAM,EAAEH;AAAT,SAAd;AACP,OA/BC,CAAN;AAiCH,KA1EiB;;AAEd,SAAKF,KAAL,GAAa;AACTF,MAAAA,KAAK,EACL,CACI;AACH;AAFD,OAFS;AAMTO,MAAAA,MAAM,EACN,EAPS;AAUTC,MAAAA,OAAO,EAAG;AAVD,KAAb;AAYH;;AAEDC,EAAAA,iBAAiB,GAAE;AACff,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKJ,YAAL;AACH;;AAyDDmB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACW;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA,kCACC;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADD,eAWC;AAAA,sBAEI,KAAKR,KAAL,CAAWF,KAAX,CAAiBW,GAAjB,CACIC,IAAI,iBACR;AAAA,sCACI;AAAA,0BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKD,IAAI,CAACE,IAAL,CAAUC,QAAV;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAK5B,MAAM,CAACyB,IAAI,CAACI,UAAN,CAAN,CAAwBC,MAAxB,CAA+B,YAA/B;AAAL;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKL,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,uCAAI;AAAQ,kBAAA,SAAS,EAAC,iBAAlB;AAAoC,kBAAA,OAAO,EAAE,MAAM,KAAKC,iBAAL,CAAuBP,IAAI,CAACQ,EAA5B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,uCAAI;AAAQ,kBAAA,SAAS,EAAC,iBAAlB;AAAoC,kBAAA,OAAO,EAAE,MAAM,KAAKC,iBAAL,CAAuBT,IAAI,CAACQ,EAA5B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA,eAASR,IAAI,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA,oBAFA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH;;AA/GgC;;AAoHrC,eAAehC,aAAf","sourcesContent":["import React , {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport OptimisationService from '../../api/map/OptimisationService.js'\nimport moment from 'moment'\n\nclass PlanComponent extends Component{\n    constructor(props){\n        super(props)    \n        this.state = {\n            todos: \n            [\n                //{id: 1, description: 'Learn React', done: false , targetDate: new Date()},\n             //{id: 2, description: 'Learn Dance', done: false , targetDate: new Date()}\n            ],\n            routes:\n            [\n\n            ],\n            message : null\n        }\n    }\n\n    componentDidMount(){\n        console.log('Component did mount')\n        this.refreshTodos();\n    }\n\n    refreshTodos= async () => {\n        let username = AuthenticationService.getLoggedInUserName();\n        console.log(username)\n        TodoDataService.retrieveAllTodos(username)\n        .then(\n            response => {\n                this.setState({todos: response.data})\n                console.log(this.state)\n            }\n        ).then(\n            response =>{\n            this.findRoutes()\n            }\n        )\n\n        \n            \n    }\n\n    findRoutes= async () =>{\n        await OptimisationService.findRoutes(this.state.todos)\n        .then(\n            response =>{\n                //this.setState({routes: response.data})\n                    let todos= this.state.todos\n                    console.log(response)\n                    let paths=[]\n    \n                    for(let i=0;i<todos.length-1;i++){\n                            paths[i]={}\n                    }\n                    for(let i=0;i<todos.length;i++){\n                            if(!response.data['waypoints'][i]['waypoint_index']){\n                                    console.log(response.data['waypoints'][i]['waypoint_index'])\n                                    paths[response.data['waypoints'][i]['waypoint_index']]['From']=todos[i]['place'];\n                            }\n                            else if(response.data['waypoints'][i]['waypoint_index']==todos.length-1){\n                                    console.log(response.data['waypoints'][i]['waypoint_index'])\n                                    paths[response.data['waypoints'][i]['waypoint_index']-1]['To']=todos[i]['place'];\n                            }\n                            else{\n                                    console.log(response.data['waypoints'][i]['waypoint_index'])\n                                    paths[response.data['waypoints'][i]['waypoint_index']]['From']=todos[i]['place'];\n                                    paths[response.data['waypoints'][i]['waypoint_index']-1]['To']=todos[i]['place'];\n                            }\n                            if(i<todos.length-1){\n                            paths[i]['Time']=response.data['trips'][0]['legs'][i]['duration']/60;\n                            }\n                    }\n                    console.log(paths)\n                    this.setState({routes: paths})\n            }\n        )\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"container\">\n                           <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>From</th>\n                                    <th>Is completed?</th>\n                                    <th>TargetDate</th>\n                                    <th>Place</th>\n                                    <th>Update</th>\n                                    <th>Delete</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo=> \n                                <tr key={todo.id}>\n                                    <td>{todo.description}</td>\n                                    <td>{todo.done.toString()}</td>\n                                    <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                    <td>{todo.place}</td>\n                                    <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                    <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                        </div>\n            </div>\n        )\n    }\n\n\n}\n\nexport default PlanComponent;\n"]},"metadata":{},"sourceType":"module"}