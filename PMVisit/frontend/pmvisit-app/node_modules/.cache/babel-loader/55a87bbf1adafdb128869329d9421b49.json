{"ast":null,"code":"import axios from \"axios\";\nimport LoginComponent from \"../../components/todo/LoginComponent\";\nimport { API_URL, JPA_API_URL } from '../../Constants';\nimport GeocodingService from '../map/GeocodingService.js';\n\nclass TodoDataService {\n  retrieveAllTodos(name) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n  }\n\n  retrieveTodo(name, id) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  deleteTodo(name, id) {\n    return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  updateTodo(name, id, todo) {\n    return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo) //console.log(\"sending request to geocoding service\")\n    //GeocodingService\n    .geocoding(todo.place).then(() => ({}));\n    console.log(\"Got back\");\n  }\n\n  createTodo(name, todo) {\n    return axios.post(`${JPA_API_URL}/users/${name}/todos`, todo);\n    console.log(\"sending request to geocoding service\");\n    GeocodingService.geocoding(todo.place).then(() => {\n      console.log('EGG');\n    }).catch(error => {\n      console.log(\"Getting error\");\n      console.error(error);\n    });\n    console.log(\"Got back\");\n  }\n\n}\n\nexport default new TodoDataService();","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/api/todo/TodoDataService.js"],"names":["axios","LoginComponent","API_URL","JPA_API_URL","GeocodingService","TodoDataService","retrieveAllTodos","name","get","retrieveTodo","id","deleteTodo","delete","updateTodo","todo","put","geocoding","place","then","console","log","createTodo","post","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,iBAAnC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,MAAMC,eAAN,CAAqB;AACjBC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,WAAOP,KAAK,CAACQ,GAAN,CAAW,GAAEL,WAAY,UAASI,IAAK,QAAvC,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACF,IAAD,EAAOG,EAAP,EAAW;AACnB,WAAOV,KAAK,CAACQ,GAAN,CAAW,GAAEL,WAAY,UAASI,IAAK,UAASG,EAAG,EAAnD,CAAP;AACH;;AAEDC,EAAAA,UAAU,CAACJ,IAAD,EAAOG,EAAP,EAAU;AAChB,WAAOV,KAAK,CAACY,MAAN,CAAc,GAAET,WAAY,UAASI,IAAK,UAASG,EAAG,EAAtD,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACN,IAAD,EAAOG,EAAP,EAAWI,IAAX,EAAgB;AACtB,WAAOd,KAAK,CAACe,GAAN,CAAW,GAAEZ,WAAY,UAASI,IAAK,UAASG,EAAG,EAAnD,EAAsDI,IAAtD,EACP;AACA;AAFO,KAGNE,SAHM,CAGIF,IAAI,CAACG,KAHT,EAINC,IAJM,CAID,OAAM,EAAN,CAJC,CAAP;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEH;;AAEDC,EAAAA,UAAU,CAACd,IAAD,EAAOO,IAAP,EAAY;AAClB,WAAOd,KAAK,CAACsB,IAAN,CAAY,GAAEnB,WAAY,UAASI,IAAK,QAAxC,EAAiDO,IAAjD,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAhB,IAAAA,gBAAgB,CACfY,SADD,CACWF,IAAI,CAACG,KADhB,EAECC,IAFD,CAEM,MAAM;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,KAJD,EAIGG,KAJH,CAIWC,KAAD,IAAU;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACH,KAPD;AAQAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEH;;AAtCgB;;AA4CrB,eAAe,IAAIf,eAAJ,EAAf","sourcesContent":["import axios from \"axios\"\nimport LoginComponent from \"../../components/todo/LoginComponent\"\nimport {API_URL, JPA_API_URL} from '../../Constants'\nimport GeocodingService from '../map/GeocodingService.js'\n\n\nclass TodoDataService{\n    retrieveAllTodos(name) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos`)\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`)\n    }\n\n    deleteTodo(name, id){\n        return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`)\n    }\n\n    updateTodo(name, id, todo){\n        return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo)\n        //console.log(\"sending request to geocoding service\")\n        //GeocodingService\n        .geocoding(todo.place)\n        .then(() =>({\n            \n        }))\n        console.log(\"Got back\")\n       \n    }\n\n    createTodo(name, todo){\n        return axios.post(`${JPA_API_URL}/users/${name}/todos`, todo)\n        console.log(\"sending request to geocoding service\")\n        GeocodingService\n        .geocoding(todo.place)\n        .then(() => {\n            console.log('EGG')\n        }).catch( (error) =>{\n            console.log(\"Getting error\")\n            console.error(error)\n        })\n        console.log(\"Got back\")\n        \n    }\n\n\n\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}