{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/PlanComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport OptimisationService from '../../api/map/OptimisationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlanComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshTodos = async () => {\n      let username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveAllTodos(username).then(response => {\n        this.setState({\n          todos: response.data\n        });\n        console.log(this.state);\n      }).then(this.findRoutes());\n    };\n\n    this.findRoutes = async () => {\n      await OptimisationService.findRoutes(this.todos).then(response => {\n        this.setState({\n          routes: response.data\n        });\n      });\n    };\n\n    this.state = {\n      todos: [//{id: 1, description: 'Learn React', done: false , targetDate: new Date()},\n        //{id: 2, description: 'Learn Dance', done: false , targetDate: new Date()}\n      ],\n      routes: [],\n      message: null\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component did mount');\n    this.refreshTodos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlanComponent;","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/PlanComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","OptimisationService","PlanComponent","constructor","props","refreshTodos","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","todos","data","console","log","state","findRoutes","routes","message","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAqC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAqBlBC,YArBkB,GAqBJ,YAAY;AACtB,UAAIC,QAAQ,GAAGN,qBAAqB,CAACO,mBAAtB,EAAf;AACAR,MAAAA,eAAe,CAACS,gBAAhB,CAAiCF,QAAjC,EACCG,IADD,CAEIC,QAAQ,IAAI;AACR,aAAKC,QAAL,CAAc;AAACC,UAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAjB,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH,OALL,EAOCP,IAPD,CAQI,KAAKQ,UAAL,EARJ;AAYH,KAnCiB;;AAAA,SAqClBA,UArCkB,GAqCN,YAAW;AACnB,YAAMhB,mBAAmB,CAACgB,UAApB,CAA+B,KAAKL,KAApC,EACLH,IADK,CAEFC,QAAQ,IAAG;AACP,aAAKC,QAAL,CAAc;AAACO,UAAAA,MAAM,EAAER,QAAQ,CAACG;AAAlB,SAAd;AACH,OAJC,CAAN;AAMH,KA5CiB;;AAEd,SAAKG,KAAL,GAAa;AACTJ,MAAAA,KAAK,EACL,CACI;AACH;AAFD,OAFS;AAMTM,MAAAA,MAAM,EACN,EAPS;AAUTC,MAAAA,OAAO,EAAG;AAVD,KAAb;AAYH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKV,YAAL;AACH;;AA2BDgB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArDgC;;AA0DrC,eAAenB,aAAf","sourcesContent":["import React , {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport OptimisationService from '../../api/map/OptimisationService.js'\n\nclass PlanComponent extends Component{\n    constructor(props){\n        super(props)    \n        this.state = {\n            todos: \n            [\n                //{id: 1, description: 'Learn React', done: false , targetDate: new Date()},\n             //{id: 2, description: 'Learn Dance', done: false , targetDate: new Date()}\n            ],\n            routes:\n            [\n\n            ],\n            message : null\n        }\n    }\n\n    componentDidMount(){\n        console.log('Component did mount')\n        this.refreshTodos();\n    }\n\n    refreshTodos= async () => {\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.retrieveAllTodos(username)\n        .then(\n            response => {\n                this.setState({todos: response.data})\n                console.log(this.state)\n            }\n        )\n        .then(\n            this.findRoutes()\n        )\n        \n            \n    }\n\n    findRoutes= async () =>{\n        await OptimisationService.findRoutes(this.todos)\n        .then(\n            response =>{\n                this.setState({routes: response.data})\n            }\n        )\n    }\n\n    render(){\n        return(\n            <div>\n                Hi\n            </div>\n        )\n    }\n\n\n}\n\nexport default PlanComponent;\n"]},"metadata":{},"sourceType":"module"}