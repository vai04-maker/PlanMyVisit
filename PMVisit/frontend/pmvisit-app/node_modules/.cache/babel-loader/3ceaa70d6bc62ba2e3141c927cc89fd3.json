{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshTodos = () => {\n      let username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveAllTodos(username).then(response => {\n        this.setState({\n          todos: response.data\n        });\n      });\n      console.log(this.state);\n    };\n\n    this.deleteTodoClicked = id => {\n      let username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.deleteTodo(username, id).then(response => {\n        this.setState({\n          message: `Delete of todo ${id} successful`\n        });\n        this.refreshTodos();\n      });\n    };\n\n    this.updateTodoClicked = id => {\n      console.log(\"In update to do\");\n      this.props.navigate(`/todos/${this.state.username}`);\n      /*let username = AuthenticationService.getLoggedInUserName()\n      TodoDataService.deleteTodo(username, id)\n      .then(\n          response =>{\n              this.setState({message: `Delete of todo ${id} successful`})\n              this.refreshTodos();\n          }\n      )*/\n    };\n\n    this.state = {\n      todos: [//{id: 1, description: 'Learn React', done: false , targetDate: new Date()},\n        //{id: 2, description: 'Learn Dance', done: false , targetDate: new Date()}\n      ],\n      message: null\n    };\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log(nextProps);\n    console.log(nextState);\n    return true;\n  }\n\n  componentDidMount() {\n    this.refreshTodos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" List Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-succes\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is completed?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TargetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.targetDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.updateTodoClicked(todo.id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.deleteTodoClicked(todo.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/vaibhav/personal_projects/to-do/frontend/todo-app/src/components/todo/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","ListTodosComponent","constructor","props","refreshTodos","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","todos","data","console","log","state","deleteTodoClicked","id","deleteTodo","message","updateTodoClicked","navigate","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","componentDidMount","render","map","todo","description","done","toString","targetDate"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass ListTodosComponent extends Component {\n    constructor(props){\n        super(props)    \n        this.state = {\n            todos: \n            [\n                //{id: 1, description: 'Learn React', done: false , targetDate: new Date()},\n             //{id: 2, description: 'Learn Dance', done: false , targetDate: new Date()}\n            ],\n            message : null\n        }\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount');\n    }\n\n    shouldComponentUpdate(nextProps, nextState){\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount(){\n        this.refreshTodos();\n    }\n\n    refreshTodos= () => {\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.retrieveAllTodos(username)\n        .then(\n            response => {\n                this.setState({todos: response.data})\n            }\n        )\n        console.log(this.state)\n    }\n\n    deleteTodoClicked= (id) => {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.deleteTodo(username, id)\n        .then(\n            response =>{\n                this.setState({message: `Delete of todo ${id} successful`})\n                this.refreshTodos();\n            }\n        )\n    }\n\n    updateTodoClicked= (id) => {\n        console.log(\"In update to do\")\n        this.props.navigate(`/todos/${this.state.username}`)\n        /*let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.deleteTodo(username, id)\n        .then(\n            response =>{\n                this.setState({message: `Delete of todo ${id} successful`})\n                this.refreshTodos();\n            }\n        )*/\n    }\n\n    render(){\n        return( <div>\n                    <h1> List Todos</h1>\n                    <div class=\"alert alert-succes\">{this.state.message}</div>\n                    <div className=\"container\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>description</th>\n                                    <th>Is completed?</th>\n                                    <th>TargetDate</th>\n                                    <th>Update</th>\n                                    <th>Delete</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo=> \n                                <tr key={todo.id}>\n                                    <td>{todo.description}</td>\n                                    <td>{todo.done.toString()}</td>\n                                    <td>{todo.targetDate.toString()}</td>\n                                    <td><button className=\"btn btn-warning\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                    <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                 </div>\n        )\n    }\n}\n\nexport default ListTodosComponent;"]},"metadata":{},"sourceType":"module"}